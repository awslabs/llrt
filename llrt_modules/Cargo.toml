[package]
name = "llrt_modules"
description = "LLRT Modules for rquickjs"
version = "0.2.1-beta"
edition = "2021"
license = "Apache-2.0"
repository = "https://github.com/awslabs/llrt"
readme = "README.md"

[features]
default = ["all"]
all = [
  "buffer",
  "child-process",
  "crypto",
  "events",
  "exceptions",
  "fs",
  "navigator",
  "net",
  "os",
  "path",
  "perf-hooks",
  "process",
  "timers",
  "url",
  "zlib",
]

buffer = ["llrt_utils/encoding"]
child-process = ["events", "__stream", "itoa"]
crypto = ["crc32c", "crc32fast", "md-5", "rand", "uuid", "uuid-simd"]
events = []
exceptions = []
fs = ["tokio/fs", "llrt_utils/fs", "ring", "buffer", "path"]
navigator = []
net = ["events", "__stream"]
os = [
  "libc",
  "windows-result",
  "windows-registry",
  "windows-version",
  "once_cell",
]
path = []
process = []
perf-hooks = []
timers = []
url = ["url_crate"]
zlib = ["flate2", "brotlic"]

__bytearray-buffer = ["tokio/sync"]
__stream = ["buffer", "__bytearray-buffer"]

[dependencies]
either = "1"
itoa = { version = "1", optional = true }
once_cell = { version = "1", optional = true }
llrt_utils = { version = "0.2.1-beta", path = "../llrt_utils", default-features = false, features = [
  "ctx",
] }
rquickjs = { version = "0.6", features = [
  "array-buffer",
  "either",
  "macro",
  "futures",
], default-features = false }
ring = { version = "0.17", optional = true }
tokio = { version = "1", features = ["rt", "io-util"] }
tracing = "0.1"
flate2 = { version = "1.0.30", features = [
  "zlib-ng",
], default-features = false, optional = true }
brotlic = { version = "0.8.2", optional = true }
uuid = { version = "1.10.0", default-features = false, features = [
  "v4",
  "fast-rng",
], optional = true }
uuid-simd = {version = "0.8.0", optional = true }
rand = { version = "0.8.5", optional = true }
crc32c = { version = "0.6.8", optional = true }
crc32fast= { version = "1.4.2", optional = true }
url_crate = { version = "=2.5.1", package = "url", optional = true }

[target.'cfg(target_os = "windows")'.dependencies]
md-5 = { version = "0.10.6", optional = true }
[target.'cfg(not(target_os = "windows"))'.dependencies]
md-5 = { version = "0.10.6", features = ["asm"], optional = true }

[target.'cfg(unix)'.dependencies]
libc = { version = "0.2", optional = true }

[target.'cfg(windows)'.dependencies]
windows-registry = { version = "0.2", optional = true }
windows-result = { version = "0.2", optional = true }
windows-version = { version = "0.1", optional = true }

[dev-dependencies]
nanoid = "0.4.0"
rand = "0.8.5"
tokio = { version = "1", features = ["full"] }
